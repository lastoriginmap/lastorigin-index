{"version":3,"sources":["common.js","NavBar.js","Tooltip.js","Info.js","Skill.js","App.js","index.js"],"names":["loadData","src","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","response","send","loadEnemyData","enemyIndex","then","enemyDataList","enemyData","getURLParameter","sParam","sURLVariables","window","location","search","substring","split","i","length","sParameterName","Hangul","require","NavBar","state","showSearchResult","showIndexResult","SearchList","ResultListStyle","IndexResultListStyle","ContainerStyle","NameList","isResultClosing","isSearchResultClosed","updateSearchList","revstate","str","searcher","Searcher","searchlist","Object","keys","reduce","acc","curr","push","sort","a","b","map","elem","openResultList","console","log","matchMedia","matches","maxHeight","document","querySelector","scrollHeight","closeResultList","openIndexResultList","index","maxHeightIndex","closeIndexResultList","handleResultsToggleClick","value","newstate","setState","prevstate","handleInputFocus","handleInputChange","e","target","scrollTo","handleResultsClick","name","handleIndexResultsClick","typeindex","props","onEnemyChange","scrollToIndex","values","indexOf","resetSearchResult","async","includes","this","className","onClick","style","opacity","type","placeholder","onFocus","onChange","React","Component","List","searchresults","indexes","key","id","indexacc","indexcurr","onTransitionEnd","Tooltip","base","tooltipdata","increment","lvlpool","children","isStatExpanded","Info","toggleExpandStat","calcLvlValue","data","lvl","Math","floor","handleLvlPlus","onLvlChange","handleLvlMinus","handleLvlChange","img","alt","readOnly","HP","ATK","HIT","CRT","DEF","DOD","AGI","resist","Skill","displayedEnemyName","changeDisplayedSkill","displayedSkill","propsdata","skillData","btnlist","skillNavWrapClass","skilldata","enemyInfo","info","SkillView","attr","undefined","skillpower","description","match","skillrate","area","areadata","some","el","rgb","round","backgroundColor","replace","line","range","AP","InfoView","App","Common","enemySkillList","skillDataList","enemyLVL","searchresult","Map","lvlsearchresult","areadatalist","forEach","searcharea","stage","filter","stageelem","wave","waveelem","enemylist","pos","obj","title","has","get","set","uncertainstat","level","parseInt","skills","loadAreaData","arealist","all","areaindex","areaNum","areaData","action","handleEnemyChange","toggleExpandStage","isStageExpanded","trackScrolling","wrappedElement","isBottom","removeEventListener","getBoundingClientRect","bottom","innerHeight","addEventListener","SpottedStage","Stage","size","Array","from","colSpan","isNaN","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c06549a6.chunk.js","sourcesContent":["//파일명 설정\r\nvar setting = '.min';\r\n//var setting = '';\r\n\r\n//공통 데이터 로드 함수\r\nfunction loadData(src)\r\n{\r\n\t//XMLHttpRequest를 사용해 데이터 파일 로드\r\n\t//로드가 완료되면 다음 작업을 진행하도록 Promise 적용\r\n\treturn new Promise((resolve, reject) =>\r\n\t{\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open('GET', src);\r\n\t\trequest.responseType = 'json';\r\n\t\trequest.onreadystatechange = function ()\r\n\t\t{\r\n\t\t\tif (request.readyState === XMLHttpRequest.DONE && request.status === 200)\r\n\t\t\t{\r\n\t\t\t\tresolve(request.response);\r\n\t\t\t}\r\n\t\t};\r\n\t\trequest.send();\r\n\t});\r\n}\r\n\r\n//구형 데이터 로드 함수\r\nexport function loadDataOld(src)\r\n{\r\n\t//<script> 요소를 추가해 데이터 파일 로드\r\n\t//로드가 완료되면 다음 작업을 진행하도록 Promise 적용\r\n\treturn new Promise((resolve, reject) =>\r\n\t{\r\n\t\tvar script = document.createElement('script');\r\n\t\tscript.type = \"text/javascript\";\r\n\t\tscript.src = src;\r\n\t\tscript.addEventListener('load', () => { resolve(); }, false);\r\n\t\tscript.addEventListener('error', () => { reject(); }, false);\r\n\t\tvar s = document.getElementsByTagName(\"script\")[0];\r\n\t\ts.parentNode.insertBefore(script, s);\r\n\t});\r\n}\r\n\r\n//지역 데이터 로드 함수\r\nexport function loadAreaData(areaNum)\r\n{\r\n\treturn new Promise((resolve, reject) =>\r\n\t{\r\n\t\t//src를 지역 데이터 파일 주소로 설정해 데이터 파일을 로드하고 areaData 오브젝트 리턴\r\n\t\tvar src = \"data/data-area\" + areaNum + setting + \".json\";\r\n\t\tloadData(src).then((areaData) => resolve(areaData), () => reject());\r\n\t});\r\n}\r\n\r\n//스테이지 데이터 로드 함수\r\nexport function loadStageData(stageTitle)\r\n{\r\n\treturn new Promise(resolve =>\r\n\t{\r\n\t\t//src를 지역 데이터 파일로 설정해 로드\r\n\t\tvar src = \"./data/data-area\" + getAreaByStageTitle(stageTitle) + setting + \".json\";\r\n\t\tloadData(src).then((areaData) =>\r\n\t\t{\r\n\t\t\tvar stageData = areaData.stage.find(sData => sData.title === stageTitle);\r\n\t\t\tvar type = getTypeByStageTitle(stageTitle)\r\n\t\t\tvar stageList = areaData.stage.reduce((acc, sData) =>\r\n\t\t\t{\r\n\t\t\t\tif (getTypeByStageTitle(sData.title) === type) acc.push(getIndexByStageTitle(sData.title))\r\n\t\t\t\treturn acc;\r\n\t\t\t}, []);\r\n\t\t\tresolve({ \"stageData\": stageData, \"stageList\": stageList });\r\n\t\t});\r\n\r\n\t});\r\n}\r\n\r\nexport function loadEnemyDataList()\r\n{\r\n\treturn new Promise(resolve =>\r\n\t{\r\n\t\tvar src = \"./data/data-enemy\" + setting + \".json\";\r\n\t\tloadData(src).then((enemyDataList) =>\r\n\t\t{\r\n\t\t\tresolve(enemyDataList);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport function loadEnemyData(enemyIndex)\r\n{\r\n\treturn new Promise(resolve =>\r\n\t{\r\n\t\tvar src = \"./data/data-enemy\" + setting + \".json\";\r\n\t\tloadData(src).then((enemyDataList) =>\r\n\t\t{\r\n\t\t\tvar enemyData = enemyDataList[enemyIndex];\r\n\t\t\tresolve(enemyData);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/*\r\nfunction loadEnemyIMGData()\r\n{\r\n\treturn new Promise(resolve=> {\r\n\t\tvar src=\"./data/data-enemy\"+setting+\".json\";\r\n\t\tloadData(src).then(()=> {\r\n\t\t\tvar enemyIMGData={};\r\n\t\t\tfor (var key in enemyDataList)\r\n\t\t\t{\r\n\t\t\t\tif (enemyDataList.hasOwnProperty(key))\r\n\t\t\t\t{\r\n\t\t\t\t\tenemyIMGData[key] = enemyDataList[key].img;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//var enemyIMGData=enemyDataList.map(data => {return {\"name\": data.name, \"img\": data.img}; });\r\n\t\t\t//resolve(enemyIMGData);\r\n\t\t\tresolve(enemyIMGData);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunction loadEnemyDescData()\r\n{\r\n\treturn new Promise(resolve=> {\r\n\t\tvar src=\"./data/data-enemy\"+setting+\".json\";\r\n\t\tloadData(src).then(()=> {\r\n\t\t\tvar enemyDescData=enemyDataList.map(data => {\r\n\t\t\t\tvar rtn = {\"name\": data.name, \"img\": data.img};\r\n\t\t\t\tif('resist' in data) rtn[\"resist\"] = data.resist;\r\n\t\t\t\tif('CRT' in data) rtn[\"CRT\"] = data.CRT;\r\n\t\t\t\treturn rtn;\r\n\t\t\t});\r\n\t\t\tresolve(enemyDescData);\r\n\t\t});\r\n\t});\r\n}\r\n*/\r\n\r\nexport function loadSkillDataList()\r\n{\r\n\treturn new Promise(resolve =>\r\n\t{\r\n\t\tvar src = \"./data/data-skill\" + setting + \".json\";\r\n\t\tloadData(src).then((enemySkillList) =>\r\n\t\t{\r\n\t\t\tresolve(enemySkillList);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport function getURLParameter(sParam)\r\n{\r\n\tvar sPageURL = window.location.search.substring(1);\r\n\tvar sURLVariables = sPageURL.split('&');\r\n\tfor (var i = 0; i < sURLVariables.length; i++)\r\n\t{\r\n\t\tvar sParameterName = sURLVariables[i].split('=');\r\n\t\tif (sParameterName[0] === sParam) { return sParameterName[1]; }\r\n\t}\r\n}\r\n\r\nexport function getAreaByStageTitle(str)\r\n{\r\n\tvar regex = /^[0-9a-zA-Z]+/;\r\n\treturn str.match(regex)[0];\r\n}\r\n\r\nexport function getIndexByStageTitle(str)\r\n{\r\n\tvar regex = /-[0-9]+/;\r\n\treturn Number(str.match(regex)[0].slice(1));\r\n}\r\n\r\nexport function getTypeByStageTitle(str)\r\n{\r\n\tvar regex = /[a-zA-Z]*$/;\r\n\treturn str.match(regex)[0];\r\n}\r\n\r\nexport function getIndexByStageGrid(grid)\r\n{\r\n\treturn grid[0];\r\n}\r\n\r\nexport function getTypeByStageGrid(grid)\r\n{\r\n\tvar stageTypeTitle = [\"B\", \"\", \"Ex\"];\r\n\treturn stageTypeTitle[grid[1]];\r\n}","import React from \"react\";\r\nimport * as Common from \"./common.js\";\r\n\r\nconst Hangul = require(\"hangul-js\");\r\n\r\nclass NavBar extends React.Component\r\n{\r\n  state = {\r\n    showSearchResult: false,\r\n    showIndexResult: false,\r\n    SearchList: null,\r\n    ResultListStyle: null,\r\n    IndexResultListStyle: null,\r\n    ContainerStyle: null\r\n  };\r\n\r\n  NameList = null;\r\n  isResultClosing = false;\r\n  isSearchResultClosed = true;\r\n\r\n  updateSearchList = (revstate, str) =>\r\n  {\r\n    revstate.showSearchResult = true;\r\n    revstate.showIndexResult = false;\r\n\r\n    if (str.length > 0)\r\n    {\r\n      let searcher = new Hangul.Searcher(str);\r\n\r\n      let searchlist = Object.keys(this.NameList)\r\n        .reduce((acc, curr) =>\r\n        {\r\n          if (searcher.search(curr) !== -1)\r\n          {\r\n            acc.push([curr, searcher.search(curr)]);\r\n          }\r\n          return acc;\r\n        }, [])\r\n        .sort((a, b) =>\r\n        {\r\n          if (a[1] < b[1]) return -1;\r\n          if (a[1] > b[1]) return 1;\r\n          return a[0] < b[0] ? -1 : a[0] > b[0] ? 1 : 0;\r\n        })\r\n        .map(elem => elem[0]);\r\n      revstate.SearchList = searchlist;\r\n    }\r\n    else\r\n    {\r\n      revstate.SearchList = Object.keys(this.NameList);\r\n    }\r\n  };\r\n\r\n  openResultList = revstate =>\r\n  {\r\n    console.log(\"openResultList\")\r\n    revstate.showSearchResult = true;\r\n    if (!matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      let maxHeight = document.querySelector(\".list\").scrollHeight + \"px\";\r\n      revstate.ResultListStyle = { ...this.state.ResultListStyle, \"maxHeight\": maxHeight };\r\n    }\r\n  }\r\n\r\n  closeResultList = revstate =>\r\n  {\r\n    console.log(\"closeResultList\")\r\n    revstate.showSearchResult = false;\r\n    if (!matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      revstate.ResultListStyle = { ...this.state.ResultListStyle, \"maxHeight\": null };\r\n      this.isResultClosing = true;\r\n    }\r\n  }\r\n\r\n  openIndexResultList = (revstate, index) =>\r\n  {\r\n    console.log(\"openIndexResultList\")\r\n    revstate.showIndexResult = index;\r\n    if (matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      let maxWidth = \"230px\";\r\n      let opacity = 1;\r\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxWidth\": maxWidth, \"opacity\": opacity };\r\n    }\r\n    else\r\n    {\r\n      let maxHeightIndex = document.querySelector(\"#\" + index).scrollHeight + \"px\";\r\n      let maxHeight = document.querySelector(\".list\").scrollHeight + document.querySelector(\"#\" + index).scrollHeight + \"px\";\r\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxHeight\": maxHeightIndex };\r\n      revstate.ResultListStyle = { ...this.state.IndexResultListStyle, \"maxHeight\": maxHeight };\r\n    }\r\n  };\r\n\r\n  closeIndexResultList = revstate =>\r\n  {\r\n    console.log(\"closeIndexResultList\")\r\n    revstate.showIndexResult = false;\r\n    if (matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxWidth\": null, \"opacity\": null };\r\n    }\r\n    else\r\n    {\r\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxHeight\": null };\r\n    }\r\n  };\r\n\r\n  handleResultsToggleClick = () =>\r\n  {\r\n    document.querySelector(\".navbar-input\").value = null;\r\n    let newstate = {};\r\n    if (this.state.showSearchResult)\r\n    {\r\n      this.closeResultList(newstate);\r\n    }\r\n    else\r\n    {\r\n      this.openResultList(newstate);\r\n    }\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  }\r\n\r\n  handleInputFocus = () =>\r\n  {\r\n    console.log(\"handleInputFocus\")\r\n    let newstate = {};\r\n    this.openResultList(newstate);\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  }\r\n\r\n  handleInputChange = e =>\r\n  {\r\n    console.log(\"handleInputChange\")\r\n    let newstate = {};\r\n    this.updateSearchList(newstate, e.target.value);\r\n    this.closeIndexResultList(newstate);\r\n    window.scrollTo(0, 0);\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  }\r\n\r\n  handleResultsClick = (name, index) =>\r\n  {\r\n    let newstate = {};\r\n    if (this.state.showIndexResult)\r\n    {\r\n      this.closeIndexResultList(newstate);\r\n    }\r\n    if (index !== this.state.showIndexResult)\r\n    {\r\n      this.openIndexResultList(newstate, index);\r\n    }\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  };\r\n\r\n  handleIndexResultsClick = (index, typeindex) =>\r\n  {\r\n    this.props.onEnemyChange(index);\r\n    let newstate = {};\r\n    this.closeResultList(newstate);\r\n    document.querySelector(\".navbar-input\").value = null;\r\n    if (matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      this.openIndexResultList(newstate, this.state.showIndexResult);\r\n      newstate.SearchList = Object.keys(this.NameList);\r\n    }\r\n    this.isResultClosing = true;\r\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\r\n  };\r\n\r\n  scrollToIndex = typeindex => \r\n  {\r\n    window.scrollTo(0, Object.values(this.NameList).map(elem => elem[0]).indexOf(typeindex) * 50);\r\n  }\r\n\r\n  resetSearchResult = () =>\r\n  {\r\n    console.log(\"resetSearchResult\")\r\n    if (!matchMedia(\"(min-width: 1100px)\").matches && this.isResultClosing)\r\n    {\r\n      this.isResultClosing = false;\r\n      let newstate = {};\r\n      this.closeIndexResultList(newstate);\r\n      this.setState(prevstate => ({\r\n        ...prevstate,\r\n        ...newstate,\r\n        \"showSearchResult\": false,\r\n        \"showIndexResult\": false,\r\n        \"SearchList\": Object.keys(this.NameList)\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n    (async () =>\r\n    {\r\n      let enemyDataList = await Common.loadEnemyDataList();\r\n      this.NameList = Object.keys(enemyDataList).reduce((acc, curr) =>\r\n      {\r\n        if (!Object.keys(acc).includes(enemyDataList[curr].name))\r\n        {\r\n          acc[enemyDataList[curr].name] = [curr];\r\n        }\r\n        else\r\n        {\r\n          acc[enemyDataList[curr].name].push(curr);\r\n        }\r\n        return acc;\r\n      }, {});\r\n      this.setState(prevstate => ({\r\n        ...prevstate,\r\n        \"showSearchResult\": false,\r\n        \"showIndexResult\": false,\r\n        \"SearchList\": Object.keys(this.NameList)\r\n      }));\r\n    })();\r\n  }\r\n\r\n  componentDidUpdate()\r\n  {\r\n    if (matchMedia(\"(min-width: 1100px)\").matches)\r\n    {\r\n      if (this.isResultClosing)\r\n      {\r\n        this.scrollToIndex(this.state.showIndexResult);\r\n        this.isResultClosing = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  render()\r\n  {\r\n    console.log(\"renderNavBar\")\r\n    return (\r\n      <div className=\"nav\">\r\n        <div className=\"navbar\">\r\n          <div className=\"navbar-button\" onClick={this.handleResultsToggleClick}>\r\n            <i className=\"material-icons material-icons-list\" style={this.state.showSearchResult ? { opacity: 0 } : null}>list</i>\r\n            <i className=\"material-icons material-icons-close\" style={this.state.showSearchResult ? null : { opacity: 0 }}>close</i>\r\n          </div>\r\n          <input type=\"text\" className=\"navbar-input\" placeholder=\"이름을 입력하세요.\" onFocus={this.handleInputFocus} onChange={this.handleInputChange}></input>\r\n          <div className=\"navbar-input-icon\">\r\n            <i className=\"material-icons\">search</i>\r\n          </div>\r\n        </div>\r\n        <List\r\n          SearchList={this.state.SearchList}\r\n          NameList={this.NameList}\r\n          handleResultsClick={this.handleResultsClick}\r\n          handleIndexResultsClick={this.handleIndexResultsClick}\r\n          resetSearchResult={this.resetSearchResult}\r\n          ResultListStyle={this.state.ResultListStyle}\r\n          showIndexResult={this.state.showIndexResult}\r\n          IndexResultListStyle={this.state.IndexResultListStyle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass List extends React.Component\r\n{\r\n  render()\r\n  {\r\n    let searchresults = this.props.SearchList == null ? [] :\r\n      this.props.SearchList.reduce((acc, curr) =>\r\n      {\r\n        let name = curr;\r\n        let indexes = this.props.NameList[curr];\r\n        let typeindex = indexes[0];\r\n        acc.value.push(\r\n          <div className=\"list-result-container\" key={typeindex + \"container\"} id={typeindex + \"container\"}>\r\n            <li className=\"list-result\" key={typeindex} onClick={() => { this.props.handleResultsClick(name, typeindex); }}>{name}</li>\r\n            <ul className=\"list list-index\" id={typeindex} key={typeindex + \"indexlist\"}\r\n              style={typeindex === this.props.showIndexResult ? this.props.IndexResultListStyle : null\r\n              }>\r\n              {indexes.reduce((indexacc, indexcurr) =>\r\n              {\r\n                indexacc.index++;\r\n                indexacc.value.push(<li className=\"list-result list-indexresult\" key={indexcurr} onClick={() => { this.props.handleIndexResultsClick(indexcurr, typeindex); }}>{name + \" \" + (indexacc.index)}</li>);\r\n                return indexacc;\r\n              }, { index: 0, value: [] }).value}\r\n            </ul>\r\n          </div>\r\n        );\r\n        acc.index++;\r\n        return acc;\r\n      }, { value: [], index: 0 }).value;\r\n\r\n    return (\r\n      <ul className=\"list\" style={this.props.ResultListStyle} onTransitionEnd={this.props.resetSearchResult}>\r\n        {searchresults}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {Fragment} from 'react';\r\n\r\nclass Tooltip extends React.Component\r\n{\r\n  render()\r\n  {\r\n    const base = this.props.tooltipdata.base;\r\n    const increment = this.props.tooltipdata.increment;\r\n    const lvlpool = this.props.lvlpool;\r\n\r\n    if(lvlpool)\r\n    {\r\n      return (\r\n        <div className=\"tooltip tooltip-stat tooltip-uncertainstat\">\r\n          {this.props.children}\r\n        </div>\r\n      );\r\n    }\r\n    else if (this.props.isStatExpanded)\r\n    {\r\n      return (\r\n        <Fragment>\r\n          {this.props.children}\r\n          <div className=\"tooltip-innertext tooltip-innertext-expanded\" > {base} + {increment} / Lv</div >\r\n        </Fragment >\r\n      );\r\n    }\r\n    else return (\r\n      <div className=\"tooltip tooltip-stat\">\r\n        {this.props.children}\r\n        <div className=\"tooltip-innertext tooltip-innertext-right\">기본: {base}<br />레벨당 증가량: {increment}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tooltip;","import React from 'react';\r\nimport Tooltip from './Tooltip.js';\r\n\r\nclass Info extends React.Component\r\n{\r\n  state = {\r\n    \"isStatExpanded\": false\r\n  }\r\n\r\n  toggleExpandStat = () =>\r\n  {\r\n    this.setState((prevstate) => ({ ...prevstate, \"isStatExpanded\": prevstate.isStatExpanded ^ true }));\r\n  };\r\n\r\n  calcLvlValue = (data, lvl) =>\r\n  {\r\n    return Math.floor(data.base + data.increment * (lvl - 1));\r\n  };\r\n\r\n  handleLvlPlus = () =>\r\n  {\r\n    this.props.onLvlChange('+');\r\n  };\r\n\r\n  handleLvlMinus = () =>\r\n  {\r\n    this.props.onLvlChange('-');\r\n  };\r\n\r\n  handleLvlChange = (e) =>\r\n  {\r\n    this.props.onLvlChange(e.target.value);\r\n  };\r\n\r\n  render()\r\n  {\r\n    const data = this.props.data;\r\n    const enemyData = data.enemyData;\r\n    const lvl = data.lvl;\r\n    return (\r\n      <div className=\"info-container\">\r\n        <div className=\"image\"><img src={\"images/profile/\" + enemyData.img + \".png\"} alt={enemyData.img} /></div>\r\n        <div className=\"type\">\r\n          <h4 id=\"type\">{enemyData.type}</h4>\r\n        </div>\r\n        <div className=\"name\">\r\n          <h2 id=\"name\">{enemyData.name}</h2>\r\n        </div>\r\n        <div className=\"LVL\">\r\n          <button className=\"lvl-change lvl-minus\" onClick={this.handleLvlMinus}><i className=\"material-icons\">remove</i></button>\r\n          <div>\r\n            <input className=\"lvl-header\" type=\"text\" value=\"Lv.\" readOnly></input>\r\n            <div className=\"tooltip\">\r\n              <input className=\"lvl-input\" type=\"text\" value={lvl} onChange={this.handleLvlChange}></input>\r\n              <div className=\"tooltip-innertext tooltip-innertext-bottom\">값을 직접 입력할 수 있습니다</div>\r\n            </div>\r\n          </div>\r\n          <button className=\"lvl-change lvl-plus\" onClick={this.handleLvlPlus}><i className=\"material-icons\">add</i></button>\r\n        </div>\r\n        <div className=\"spec-wrap\">\r\n          <div className=\"spec-item spec-item-header\" id=\"HP\"><img src=\"images/icon_HP2.png\" alt=\"HP Icon\" /><div>HP</div></div><div className=\"spec-item\" id=\"HP\"><Tooltip lvlpool={data.lvlpool} tooltipdata={{...enemyData.HP, \"increment\":Math.floor(enemyData.HP.increment)}} isStatExpanded={this.state.isStatExpanded}><span className=\"tooltip-text\" onClick={this.toggleExpandStat}>{this.calcLvlValue({...enemyData.HP, \"increment\":Math.floor(enemyData.HP.increment)}, lvl)}</span></Tooltip></div>\r\n          <div className=\"spec-item spec-item-header\"></div><div className=\"spec-item\" ></div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_ATK2.png\" alt=\"ATK Icon\" /><div>공격력</div></div><div className=\"spec-item\" id=\"ATK\"><Tooltip lvlpool={data.lvlpool} tooltipdata={enemyData.ATK} isStatExpanded={this.state.isStatExpanded}><span className=\"tooltip-text\" onClick={this.toggleExpandStat}>{this.calcLvlValue(enemyData.ATK, lvl)}</span></Tooltip></div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_HIT2.png\" alt=\"HIT Icon\" /><div>적중률</div></div><div className=\"spec-item\" id=\"HIT\">{enemyData.HIT} %</div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_CRT2.png\" alt=\"CRT Icon\" /><div>치명타</div></div><div className=\"spec-item\" id=\"CRT\">{enemyData.CRT} %</div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_DEF2.png\" alt=\"DEF Icon\" /><div>방어력</div></div><div className=\"spec-item\" id=\"DEF\"><Tooltip lvlpool={data.lvlpool} tooltipdata={enemyData.DEF} isStatExpanded={this.state.isStatExpanded}><span className=\"tooltip-text\" onClick={this.toggleExpandStat}>{this.calcLvlValue(enemyData.DEF, lvl)}</span></Tooltip></div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_DOD2.png\" alt=\"DOD Icon\" /><div>회피율</div></div><div className=\"spec-item\" id=\"DOD\">{enemyData.DOD} %</div>\r\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_AGI.png\" alt=\"AGI Icon\" /><div>행동력</div></div><div className=\"spec-item\" id=\"AGI\">{enemyData.AGI}</div>\r\n          <div className=\"spec-item resist-wrap\">\r\n            <div className=\"spec-item resist resist-header\">속성 저항</div>\r\n            <div className=\"spec-item resist\" id=\"fire\"><img className=\"icon-attr\" src=\"images/fire.png\" alt=\"fireicon\" /> {enemyData.resist[0]} %</div>\r\n            <div className=\"spec-item resist\" id=\"ice\"><img className=\"icon-attr\" src=\"images/ice.png\" alt=\"iceicon\" /> {enemyData.resist[1]} %</div>\r\n            <div className=\"spec-item resist\" id=\"electric\"><img className=\"icon-attr\" src=\"images/electric.png\" alt=\"electricicon\" /> {enemyData.resist[2]} %</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nclass Skill extends React.Component\r\n{\r\n  state = {\r\n    \"displayedSkill\": 0\r\n  };\r\n\r\n  displayedEnemyName = this.props.data.enemyData.name;\r\n\r\n  changeDisplayedSkill = (index) =>\r\n  {\r\n    this.setState({ \"displayedSkill\": index });\r\n  }\r\n\r\n  componentDidUpdate()\r\n  {\r\n    if(this.props.data.enemyData.name !== this.displayedEnemyName)\r\n    {\r\n      this.displayedEnemyName = this.props.data.enemyData.name;\r\n      this.setState({ \"displayedSkill\": 0 });\r\n    }\r\n  }\r\n\r\n  render()\r\n  {\r\n    const displayedSkill = this.state.displayedSkill;\r\n    const propsdata = this.props.data;\r\n    const enemyData = propsdata.enemyData;\r\n    const skillData = propsdata.skillData;\r\n    const lvl = propsdata.lvl;\r\n    let btnlist = skillData.map((data, index) => (\r\n      <button className={`btn skill-${data.type} ${displayedSkill === index ? \"active\" : \"\"}`} key={\"skillbtn\" + index} onClick={() => this.changeDisplayedSkill(index)}>\r\n        <img className={\"skill-icon\"} src={`images/SkillIcon/${data.img}_${data.type}.png`} alt={`${data.img}_${data.type} icon`} />\r\n      </button>\r\n    ));\r\n    btnlist.push(\r\n      <button className={`btn btn-info skill-active ${displayedSkill === skillData.length ? \"active\" : \"\"}`} key=\"skillinfobtn\" onClick={() => this.changeDisplayedSkill(skillData.length)}>\r\n        <img className=\"skill-icon info-icon\" src=\"images/info.png\" alt=\"info icon\" />\r\n      </button>\r\n    );\r\n\r\n    let skillNavWrapClass = \"skill-nav-wrap skill-active\";\r\n    if (displayedSkill < skillData.length)\r\n    {\r\n      skillNavWrapClass = \"skill-nav-wrap skill-\" + skillData[displayedSkill].type;\r\n    }\r\n\r\n    return (\r\n      <div className=\"skill-container\">\r\n        <div className=\"skill-header\">\r\n          <h3>보유 스킬</h3>\r\n        </div>\r\n        <div className={skillNavWrapClass}>\r\n          <nav className=\"skill-nav\">\r\n            {btnlist}\r\n          </nav>\r\n        </div>\r\n        {\r\n          displayedSkill < skillData.length ?\r\n            <SkillView skilldata={skillData[displayedSkill]} ATK={enemyData.ATK} lvl={lvl} /> :\r\n            <InfoView enemyInfo={enemyData.info} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SkillView extends React.Component\r\n{\r\n  render()\r\n  {\r\n    const skilldata = this.props.skilldata;\r\n    const ATK = this.props.ATK.base + this.props.ATK.increment * (this.props.lvl - 1);\r\n\r\n    let attr = \"normal\"\r\n    if (skilldata.attr !== undefined) { attr = skilldata.attr; }\r\n\r\n    let skillpower = \"\"\r\n    var m = skilldata.description.match(/\\$\\((\\d+\\.*\\d*)\\)/);\r\n    if (m != null)\r\n    {\r\n      let skillrate = skilldata.description.match(/\\$\\((\\d+\\.*\\d*)\\)/)[1];\r\n      skillpower = Math.floor(ATK * skillrate);\r\n      (skillpower<1) && (skillpower=1);\r\n    }\r\n\r\n    let area = [];\r\n    if (!skilldata.areadata.some(el => { return el < 1; }))\r\n    {\r\n      for (let i = 0; i < skilldata.areadata.length; i++)\r\n      {\r\n        area[skilldata.areadata[i] - 1] = { backgroundColor: \"rgb(255, 213, 0)\" };\r\n      }\r\n    }\r\n    else\r\n    {\r\n      for (let i = 0; i < 9; i++)\r\n      {\r\n        let rgb = [255, Math.round((213 - 128) / 0.5 * (skilldata.areadata[i] - 0.5) + 128), 0];\r\n        if (skilldata.areadata[i] === 0) { rgb = [45, 45, 45]; }\r\n        area[i] = { backgroundColor: `rgb(${rgb})` };\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"skillview-container\">\r\n        <div className=\"skill-name\">\r\n          <img className='icon-attr' src={\"images/\" + attr + \".png\"} alt={attr + \" icon\"} /><h5> Lv. 1</h5> <h3> {skilldata.name} </h3>\r\n        </div>\r\n        <div className=\"skill-area\">\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td style={area[6]}></td><td style={area[7]}></td><td style={area[8]}></td>\r\n              </tr>\r\n              <tr>\r\n                <td style={area[3]}></td><td style={area[4]}></td><td style={area[5]}></td>\r\n              </tr>\r\n              <tr>\r\n                <td style={area[0]}></td><td style={area[1]}></td><td style={area[2]}></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"skill-description\">\r\n          <p>{skilldata.description.replace(/\\$\\((\\d+\\.*\\d*)\\)/g, (skillpower)+\" ($1배)\").split('<br>').map((line, i) => <span key={i}>{line}<br /></span>)}</p>\r\n        </div>\r\n        <div className=\"skill-range\">\r\n          사정거리 {skilldata.range}<br />AP-{skilldata.AP}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass InfoView extends React.Component\r\n{\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"skillview-container info-description\">\r\n        <h3>대상 정보</h3>\r\n        <p>{this.props.enemyInfo.split('<br>').map((line, i) => <span key={i}>{line}<br /></span>)}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skill;","import React from 'react';\nimport * as Common from './common.js';\nimport NavBar from './NavBar.js';\nimport Info from './Info.js';\nimport Skill from './Skill.js';\nimport './App.css';\n\nclass App extends React.Component\n{\n  state = {\n    \"enemyIndex\": null,\n    \"lvl\": null,\n    \"lvlpool\": false,\n    \"enemyData\": null,\n    \"skillData\": null,\n    \"SpottedStage\": null,\n    \"isStageExpanded\": false\n  };\n\n  constructor(props)\n  {\n    console.log(\"constructor\");\n    super(props);\n    this.loadAreaData(this.props.enemyIndex);\n  }\n\n  loadData = async (enemyIndex) =>\n  {\n    let enemyData = await Common.loadEnemyData(enemyIndex);\n    let skillDataList = await Common.loadSkillDataList();\n    let lvl = this.state.lvl || this.props.enemyLVL;\n\n    let searchresult = new Map();\n    let lvlsearchresult = false;\n    this.areadatalist.forEach(areadata =>\n    {\n      let searcharea = areadata.stage.filter(stageelem => stageelem.wave.some(waveelem => waveelem.enemylist.some(pos => pos.index === enemyIndex)))\n        .map(stage =>\n        {\n          let obj = { \"title\": stage.title };\n          ('name' in stage) && (obj.name = stage.name);\n          return obj;\n        });\n      if (searcharea.length > 0)\n      {\n        if (areadata.title.includes(\"Daily\"))\n        {\n          searchresult.has(\"Daily\") ? searchresult.get(\"Daily\").push(...searcharea) : searchresult.set(\"Daily\", searcharea);\n        }\n        else searchresult.set(areadata.title, searcharea);\n      }\n    });\n\n    if (\"uncertainstat\" in enemyData && enemyData.uncertainstat)\n    {\n      lvlsearchresult = [];\n      this.areadatalist.forEach(areadata => areadata.stage.forEach(stageelem => stageelem.wave.forEach(waveelem => waveelem.enemylist.forEach(pos =>\n      {\n        if (pos.index === enemyIndex)\n        {\n          lvlsearchresult.push(pos.level);\n        }\n      }))));\n      lvl=lvlsearchresult[0];\n    }\n    this.setState(prevstate => ({\n      ...prevstate,\n      \"enemyIndex\": enemyIndex,\n      \"enemyData\": enemyData,\n      \"lvl\": parseInt(lvl),\n      \"lvlpool\": lvlsearchresult,\n      \"skillData\": enemyData.skills.map(index => skillDataList[index]),\n      \"SpottedStage\": searchresult\n    }));\n  };\n\n  loadAreaData = async enemyIndex =>\n  {\n    const arealist = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"Daily1\", \"Daily2\", \"Daily3\", \"Ev11\", \"Ev21\", \"Ev22\", \"Ev23\", \"Ev31\", \"Ev41\", \"Ev51\", \"Ev52\", \"Ev61\", \"Ev62\"];\n    this.areadatalist = await Promise.all(arealist.map(areaindex => Common.loadAreaData(areaindex)));\n    this.loadData(enemyIndex);\n  }\n\n  handleLvlChange = (action) =>\n  {\n    let lvl = this.state.lvl;\n    if (this.state.lvlpool)\n    {\n      let lvlpool = this.state.lvlpool;\n      if (action === '+')\n      {\n        if(lvlpool.indexOf(lvl)<lvlpool.length-1)\n        {\n          lvl = lvlpool[lvlpool.indexOf(lvl)+1];\n        }\n        else\n        {\n          lvl = lvlpool[lvlpool.indexOf(lvl)];\n        }\n      }\n      else if (action === '-')\n      {\n        if(lvlpool.indexOf(lvl)>0)\n        {\n          lvl = lvlpool[lvlpool.indexOf(lvl)-1];\n        }\n        else\n        {\n          lvl = lvlpool[lvlpool.indexOf(lvl)];\n        }\n      }\n    }\n    else\n    {\n      if (action === '+')\n      {\n        lvl++;\n      }\n      else if (action === '-')\n      {\n        lvl > 1 && lvl--;\n      }\n      else\n      {\n        lvl = parseInt((action.length === 0 || action < 1) ? 1 : action);\n      }\n    }\n    this.setState(prevstate => ({\n      ...prevstate,\n      \"lvl\": lvl\n    }));\n  }\n\n  handleEnemyChange = index =>\n  {\n    this.loadData(index);\n  }\n\n  toggleExpandStage = () =>\n  {\n    this.setState((prevstate) => ({ ...prevstate, \"isStageExpanded\": prevstate.isStageExpanded ^ true }));\n  };\n\n  isBottom(el)\n  {\n    return el.getBoundingClientRect().bottom <= window.innerHeight;\n  }\n\n  trackScrolling = () =>\n  {\n    const wrappedElement = document.querySelector(\".content\");\n    if (this.isBottom(wrappedElement))\n    {\n      console.log('header bottom reached');\n      document.removeEventListener('scroll', this.trackScrolling);\n    }\n  };\n\n  componentDidMount()\n  {\n    console.log(\"componentDidMount\")\n    document.addEventListener('scroll', this.trackScrolling);\n  }\n\n  componentDidUpdate()\n  {\n    console.log(\"componentDidUpdate\")\n  }\n\n  render()\n  {\n    console.log(\"renderApp\")\n    return (\n      this.state.enemyData == null ? <div>Loading...</div>\n        :\n        <div className=\"container\">\n          <div className=\"nav-container\">\n            <NavBar onEnemyChange={this.handleEnemyChange} />\n          </div>\n          <div className=\"content-container\">\n            <div className=\"content\">\n              <Info data={this.state} onLvlChange={this.handleLvlChange} />\n              <Skill data={this.state} index={this.props.enemyIndex} />\n              <Stage SpottedStage={this.state.SpottedStage} isStageExpanded={this.state.isStageExpanded} toggleExpandStage={this.toggleExpandStage} />\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst Stage = props =>\n{\n  return (\n    <div className=\"stage\">\n      <div className=\"stage-header\" onClick={props.toggleExpandStage}>등장 스테이지<i className=\"material-icons\">{(props.isStageExpanded ? \"expand_less\" : \"expand_more\")}</i></div>\n      <div className={\"stage-inner\" + (props.isStageExpanded ? \"\" : \" stage-inner-hidden\")}>\n        {\n          props.SpottedStage.size === 0 ? <table key=\"stagetable\"><thead><tr><th>영원의 전장 (업데이트 예정)</th></tr></thead></table> :\n            Array.from(props.SpottedStage, ([key, value]) => (\n              <table key={key}>\n                <thead>\n                  {key.includes(\"Daily\") ? \"\" : <tr><th colSpan={value.length}>{key + (isNaN(key) ? \"\" : \"구역\")}</th></tr>}\n                </thead>\n                <tbody>\n                  <tr>{value.map(stage => (<td key={stage.title}><a href={\"https://lastoriginmap.github.io/stage.html?stagetitle=\" + stage.title}>{stage.name || stage.title}</a></td>))}</tr>\n                </tbody>\n              </table>\n            ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Common from './common.js';\nimport App from './App.js';\nimport './index.css';\n\nvar enemyIndex = Common.getURLParameter('enemy') || \"NightChick_N\";\nvar enemyLVL = Common.getURLParameter('lvl') || 1;\n\nReactDOM.render(<App enemyIndex = {enemyIndex} enemyLVL = {enemyLVL} />, document.getElementById('root'));\n"],"sourceRoot":""}